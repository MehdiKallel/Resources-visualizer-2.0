#usercolumn { width: 50%; }
#usercolumn .column { padding-left: 2em; }
#graphcolumn { margin: 0; padding: 0; border-right: 1pt solid ButtonShadow; min-width: 9em; }
#graphcolumn .column { margin: 0; padding: 0; }

#graphcolumn .column svg { margin:0; padding:0; }

.ui-resizable-handle { 
  z-index: 99999; 
  color: ButtonShadow;
  position: absolute;
  white-space:nowrap;
}
.ui-resizable-w { 
  cursor: w-resize; 
  -webkit-transform: rotate(90deg); 
  -webkit-transform-origin: 0% 100%; 
  -moz-transform: rotate(90deg); 
  -moz-transform-origin: left bottom; 
  margin-top: -1em;
  margin-left: 0.3em;
}
.ui-resizable-s { 
  right:2em;
  cursor: s-resize; 
  text-align: right;
  margin-top: 1.1em;
}

.skill-item {
  cursor: pointer;
  transition: all 0.3s ease;
  padding: 3px !important;
  padding-right: 50px !important;
  border-radius: 3px;
  position: relative !important;
  overflow: hidden;
  /* Remove flexbox to use absolute positioning */
  display: block !important;
}

.skill-item:hover {
  background-color: #e0f7fa;
  transform: translateY(-1px);
  box-shadow: 0 4px 15px rgba(0, 188, 212, 0.3);
}

.skill-item:hover::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, 
    rgba(0, 188, 212, 0.1),
    rgba(0, 188, 212, 0.2),
    rgba(0, 188, 212, 0.1)
  );
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.skill-item.active {
  background-color: #e3f2fd;
  font-weight: 500;
}

.skill-item.selected {
  background-color: #dabfd2;
}

.skill-item .subject-count {
  /* Position the count absolutely to the right */
  position: absolute !important;
  right: 8px !important;
  top: 50% !important;
  transform: translateY(-50%) !important;
  margin: 0 !important;
  flex-shrink: 0 !important;
}

#details-skills {
  overflow-y: auto;
  padding: 10px;
}

#centered-container {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 80%;
  height: 80%;
  z-index: 1000;
  border: 2px dashed #666;
  background: rgba(255, 255, 255, 0.95);
  display: none; /* Hidden by default */
  pointer-events: auto; /* Allow interactions */
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.close-button {
  position: absolute;
  top: 10px;
  right: 10px;
  cursor: pointer;
  font-size: 20px;
  background: #f8f8f8;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1001;
}

#centered-container svg {
  width: 100%;
  height: 100%;
}

.dragging-circle {
  opacity: 0.8;
  pointer-events: none;
  filter: drop-shadow(0 1px 2px rgba(0,0,0,0.3));
  z-index: 8000;
}
.block-drop-indicator {
  pointer-events: none;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);
  transition: all 0.2s ease;
}

.expr-block.highlight-target { box-shadow: 0 0 0 2px #4a90e2; }
.drop-target-highlight {
  box-shadow: 0 0 5px 2px rgba(74, 144, 226, 0.5) !important;
}
.skill-drop-indicator {
  /* 4px-wide blue bar, absolutely positioned */
  position: absolute;
  width: 4px;
  height: 24px;
  background: #4a90e2;
  border-radius: 2px;
  z-index: 110;
  pointer-events: none;
  transition: all 0.1s ease;
}

/* Add to existing styles */
.expr-item {
  transition: all 0.2s ease;
  margin: 4px;
  padding: 6px 12px;
  border-radius: 4px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.expr-item:hover {
  transform: translateY(-1px);
  box-shadow: 0 3px 6px rgba(0,0,0,0.15);
}

.expr-block {
  background: #e3f2fd;
  border: 1px solid #90caf9;
  border-radius: 6px;
  padding: 4px;
}

.operator {
  background: #f0f4ff;
  border: 1px solid #9fa8da;
  cursor: pointer;
}

.operator:hover {
  background: #e8eaf6;
}

.draggable-handle {
  cursor: grab;
  margin-right: 8px;
  color: #666;
}

.expr-block {
  padding: 5px; /* Increase padding to cover internal spacing */
  margin: 2px 0; /* Ensure vertical spacing doesn't create gaps */
  display: inline-block; /* Change from inline-flex for consistent sizing */
  position: relative; /* Helps with boundary calculations */
}


.expression-block.drop-top {
  border-top: 4px solid #4a90e2;
}

.expression-block.drop-bottom {
  border-bottom: 4px solid #4a90e2;
}

.block-item {
  display: flex;
  align-items: center;
  padding: 4px 8px;
  background: white;
  border: 1px solid #ddd;
  border-radius: 4px;
  margin: 2px 0;
  transition: transform 0.2s, box-shadow 0.2s;
}

.block-item.dragging {
  opacity: 0.5;
  transform: scale(0.95);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}


circle {
  cursor: grab;
}

circle:active {
  cursor: grabbing;
}
.dragging-circle {
  opacity: 0.85;
  filter: drop-shadow(0 2px 6px rgba(0,0,0,0.3));
  cursor: grabbing !important;
  pointer-events: none; /* so you don't re-hit it underneath */
  z-index: 1000000;
}


.g {
  z-index: 100000;
}

/* Add to expression-builder-styles */
.drop-effect {
  animation: drop-bounce 0.5s ease;
  transform-origin: center;
}

@keyframes drop-bounce {
  0% { transform: scale(0.8); opacity: 0; }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); opacity: 1; }
}

/* Custom drop effects */
@keyframes dropPulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}



.expression-dropzone {
  position: relative;
  transition: all 0.2s ease;
}

.expression-dropzone.active {
  box-shadow: 0 0 0 2px #4CAF50;
  transform: scale(1.02);
}
.insertion-marker {
  background: #4a90e2;
  width: 2px;
  height: 80%;
  position: absolute;
  top: 10%;
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0% { opacity: 0.4; }
  50% { opacity: 1; }
  100% { opacity: 0.4; }
}
/* Ensure dragging circle is on top and has a drop animation */
.dragging-circle {
  opacity: 0.85;
  filter: drop-shadow(0 2px 6px rgba(0,0,0,0.3));
  cursor: grabbing !important;
  pointer-events: none;
  z-index: 1000000; /* Higher than expression builder's z-index */
  transition: opacity 0.3s, transform 0.3s;
}

/* Drop effect animation */
.drop-effect {
  animation: dropScaleFade 0.3s ease-out forwards;
}

@keyframes dropScaleFade {
  0% {
    transform: scale(1);
    opacity: 0.85;
  }
  100% {
    transform: scale(0);
    opacity: 0;
  }
}

/* Optional: Highlight effect on the drop target */
#expressionBuilder {
  transition: box-shadow 0.3s;
}

#expressionBuilder.drop-target-active {
  box-shadow: 0 0 15px rgba(74, 144, 226, 0.5);
}
.expr-highlight {
  animation: golden-select 2.2s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  position: relative;
  padding: 2px 4px;
  border-radius: 3px;
}

@keyframes golden-select {
  0% {
    filter: drop-shadow(0 0 6px rgba(255, 215, 0, 0.6))
            drop-shadow(0 0 4px rgba(255, 165, 0, 0.4));
    background: linear-gradient(45deg, 
      rgba(255, 240, 180, 0.1) 0%,
      rgba(255, 228, 120, 0.15) 100%);
  }
  50% {
    filter: drop-shadow(0 0 14px rgba(255, 223, 0, 0.8))
            drop-shadow(0 0 8px rgba(255, 195, 0, 0.6));
    background: linear-gradient(45deg, 
      rgba(255, 240, 180, 0.15) 0%,
      rgba(255, 228, 120, 0.2) 100%);
  }
  100% {
    filter: drop-shadow(0 0 6px rgba(255, 215, 0, 0.6))
            drop-shadow(0 0 4px rgba(255, 165, 0, 0.4));
    background: linear-gradient(45deg, 
      rgba(255, 240, 180, 0.1) 0%,
      rgba(255, 228, 120, 0.15) 100%);
  }
}

.hover-highlight {
  /* keep your fill-pulse if you like */
  fill: #e74c3c !important;
  fill-opacity: 0.2;
  animation:
    pulse-fill 2s ease-in-out infinite,
    dash-march 1s linear infinite,
    glow-pulse 1.5s ease-in-out infinite;
  
  /* THICK, BRIGHT, DASHED STROKE */
  stroke: #ff1744 !important;
  stroke-width: 3px;
  stroke-linecap: round;
  stroke-dasharray: 10 5;
  stroke-dashoffset: 0;

  /* DUAL DROP-SHADOW FOR A STRONGER GLOW */
  filter:
    drop-shadow(0 0 8px rgba(231, 76, 60, 0.7))
    drop-shadow(0 0 16px rgba(231, 76, 60, 0.5));
  
  transition: filter 0.2s ease-out, stroke-width 0.2s ease-out;
}

@keyframes dash-march {
  to { stroke-dashoffset: -15; } /* sum(dash+gap) = 15 */
}

@keyframes glow-pulse {
  0%, 100% {
    filter:
      drop-shadow(0 0 6px rgba(231, 76, 60, 0.5))
      drop-shadow(0 0 12px rgba(231, 76, 60, 0.3));
  }
  50% {
    filter:
      drop-shadow(0 0 12px rgba(231, 76, 60, 0.8))
      drop-shadow(0 0 24px rgba(231, 76, 60, 0.6));
  }
}

/* your existing fill-pulse */
@keyframes pulse-fill {
  0%, 100% { fill-opacity: 0.2; }
  50%      { fill-opacity: 0.6; }
}
/* Add these to custom.css */
@keyframes nodeShake {
  0%, 100% { 
    transform: scale(1.1) rotate(0deg);
    filter: brightness(1);
  }
  25% { 
    transform: scale(1.15) rotate(-3deg);
    filter: brightness(1.2);
  }
  75% { 
    transform: scale(1.15) rotate(3deg);
    filter: brightness(1.2);
  }
}

@keyframes nodeEnlarge {
  0% { transform: scale(1); }
  100% { transform: scale(1.2); }
}



/* 1) New keyframes: subtle back-and-forth + glow pulse */
/* 1) Pure horizontal shake */
@keyframes holdShake {
  0%, 100%   { transform: translateX(-1px); }
  50%        { transform: translateX(1px); }
}

/* 2) Slow glow pulse */
@keyframes holdGlow {
  0%   { filter: drop-shadow(0 0 4px rgba(0,180,255,0.4)); }
  50%  { filter: drop-shadow(0 0 16px rgba(0,220,255,0.8)); }
  100% { filter: drop-shadow(0 0 4px rgba(0,180,255,0.4)); }
}

/* 3) Combined on holdâ€”with subtle ease and alternation */
.hold-active:not([class*="relation"]) {
  animation:
    holdShake 0.25s ease-in-out infinite alternate,
    holdGlowIntensify 1s ease-out forwards;
  transform-origin: center;
  cursor: grabbing;
}

@keyframes holdGlowIntensify {
  0%   { filter: drop-shadow(0 0 4px rgba(0,180,255,0.4)); }
  20%  { filter: drop-shadow(0 0 8px rgba(0,200,255,0.5)); }
  40%  { filter: drop-shadow(0 0 12px rgba(0,210,255,0.6)); }
  60%  { filter: drop-shadow(0 0 16px rgba(0,220,255,0.7)); }
  80%  { filter: drop-shadow(0 0 20px rgba(0,230,255,0.8)); }
  100% { filter: drop-shadow(0 0 24px rgba(0,240,255,0.9)); }
}


/* 3) When you remove .hold-active, it'll snap right back to normal */

/* Circle hover effect */
circle:hover {
  filter: brightness(1.2) drop-shadow(0 0 4px rgba(0,180,255,0.4));
  transition: all 0.2s ease-out;
}

/* Ripple animation for double-click feedback */
@keyframes rippleEffect {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(20);
    opacity: 0;
  }
}

/* Updated tooltip styles */
#circle-tooltip {
  position: fixed;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  padding: 6px 12px;
  border-radius: 4px;
  font-size: 13px;
  pointer-events: none;
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.2s ease-out, transform 0.2s ease-out;
  z-index: 10000;
  box-shadow: 0 2px 6px rgba(0,0,0,0.2);
  font-family: Arial, sans-serif;
}

#circle-tooltip.visible {
  opacity: 1;
  transform: translateY(0);
}

#circle-tooltip.hiding {
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.2s ease-out, transform 0.2s ease-out;
}

/* Remove these transition-related classes and keyframes */
.orbit-transition-out,
.skills-transition-in,
.vertical-fade-out,
.skills-slide-up {
  animation: none;
}

/* Keep other existing styles */

/* Simple Management Forms Styles */
.subjects-management-container,
.units-management-container,
.roles-management-container,
.skills-management-container {
  display: flex;
  height: 80%;
  gap: 20px;
  padding: 20px;
}

.subjects-list-section,
.units-list-section,
.roles-list-section,
.skills-list-section {
  flex: 1;
  padding: 15px;
  border: 1px solid #ccc;
}

.subject-editor-section,
.unit-editor-section,
.role-editor-section,
.skill-editor-section {
  flex: 1;
  padding: 15px;
  border: 1px solid #ccc;
}

.form-group {
  margin-bottom: 15px;
}

.form-group label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
}

.form-group input,
.form-group select {
  width: 100%;
  padding: 8px;
  border: 1px solid #ccc;
  box-sizing: border-box;
}


.add-relation-controls {
  display: flex;
  gap: 10px;
  margin-top: 10px;
}

.add-relation-controls input {
  flex: 1;
  padding: 8px;
  border: 1px solid #ccc;
}

#unit-role-pairs,
#edit-unit-role-pairs {
  margin-bottom: 15px;
  padding: 10px;
  border: 1px dashed #ccc;
  background: #fafafa;
  border-radius: 4px;
  min-height: 60px;
}

#unit-role-pairs:empty::before,
#edit-unit-role-pairs:empty::before {
  content: "No unit-role pairs added yet. Use the controls below to add pairs.";
  color: #999;
  font-style: italic;
  display: block;
  padding: 15px;
  text-align: center;
}

.unit-role-item {
  display: flex;
  gap: 10px;
  margin-bottom: 10px;
  padding: 10px;
  border: 1px solid #ddd;
  background: white;
  align-items: center;
  border-radius: 4px;
}

.unit-role-item input {
  flex: 1;
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 3px;
  font-size: 14px;
}

.unit-role-item .remove-relation-btn {
  background: #dc3545;
  color: white;
  border: none;
  padding: 8px 12px;
  cursor: pointer;
  border-radius: 3px;
  font-size: 14px;
  min-width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.unit-role-item .remove-relation-btn:hover {
  background: #c82333;
}

/* Skills container styling */
#edit-skills {
  margin-bottom: 15px;
  padding: 10px;
  border: 1px dashed #ccc;
  background: #fafafa;
  border-radius: 4px;
  min-height: 60px;
}

#edit-skills:empty::before {
  content: "No skills assigned yet. Use the controls below to add skills.";
  color: #999;
  font-style: italic;
  display: block;
  padding: 15px;
  text-align: center;
}

.skill-item-edit {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  margin: 4px;
  padding: 6px 10px;
  background: #e3f2fd;
  border: 1px solid #bbdefb;
  border-radius: 16px;
  font-size: 14px;
}

.skill-item-edit .skill-name {
  font-weight: 500;
}

.skill-item-edit .remove-btn {
  background: #f44336;
  color: white;
  border: none;
  padding: 2px 6px;
  cursor: pointer;
  border-radius: 50%;
  font-size: 12px;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
}


.relation-skill-name {
  font-weight: 500;
  background: #e3f2fd;
  padding: 4px 8px;
  border-radius: 3px;
  font-size: 14px;
  min-width: 80px;
}

.relation-manual-input {
  display: flex;
  gap: 5px;
  align-items: center;
}

.relation-id-input {
  padding: 4px 8px;
  border: 1px solid #ccc;
  border-radius: 3px;
  font-size: 14px;
  width: 120px;
}

.confirm-relation-btn {
  background: #28a745;
  color: white;
  border: none;
  padding: 4px 8px;
  cursor: pointer;
  border-radius: 3px;
  font-size: 14px;
}

.relation-type-input {
  padding: 4px 8px;
  border: 1px solid #ccc;
  border-radius: 3px;
  font-size: 14px;
  width: 100px;
}

.strength-controls {
  display: flex;
  align-items: center;
  gap: 5px;
}

.strength-controls label {
  font-size: 12px;
  color: #666;
  margin: 0;
}

.strength-slider {
  width: 60px;
  margin: 0;
}

.strength-input {
  width: 40px;
  padding: 2px 4px;
  border: 1px solid #ccc;
  border-radius: 3px;
  font-size: 12px;
  text-align: center;
  margin: 0;
}

.toggle-custom-btn {
  background: #6c757d;
  color: white;
  border: none;
  padding: 2px 6px;
  cursor: pointer;
  border-radius: 3px;
  font-size: 12px;
  width: 20px;
  height: 20px;
}

.remove-relation-btn {
  background: #dc3545;
  color: white;
  border: none;
  padding: 4px 8px;
  cursor: pointer;
  border-radius: 3px;
  font-size: 14px;
  margin-left: auto;
}

#relations-container {
  margin-bottom: 16px;
  padding: 8px;
  border: 1px solid #ccc;
  min-height: 40px;
  max-height: 300px;
  overflow-y: auto;
}

#relations-container:empty::before {
  content: "No relations added";
  display: block;
  padding: 8px;
  text-align: center;
  opacity: 0.6;
}






